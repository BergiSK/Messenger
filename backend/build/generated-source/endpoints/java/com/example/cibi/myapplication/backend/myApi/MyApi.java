/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-01-11 18:31:16 UTC)
 * on 2017-01-26 at 18:04:42 UTC 
 * Modify at your own risk.
 */

package com.example.cibi.myapplication.backend.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://starry-gravity-127308.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "login".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link Login#execute()} method to invoke the remote operation.
   *
   * @param loginName
   * @param password
   * @return the request
   */
  public Login login(java.lang.String loginName, java.lang.String password) throws java.io.IOException {
    Login result = new Login(loginName, password);
    initialize(result);
    return result;
  }

  public class Login extends MyApiRequest<com.example.cibi.myapplication.backend.myApi.model.UserSS> {

    private static final String REST_PATH = "login/{loginName}/{password}";

    /**
     * Create a request for the method "login".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link Login#execute()} method to invoke the remote operation. <p> {@link
     * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param loginName
     * @param password
     * @since 1.13
     */
    protected Login(java.lang.String loginName, java.lang.String password) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.cibi.myapplication.backend.myApi.model.UserSS.class);
      this.loginName = com.google.api.client.util.Preconditions.checkNotNull(loginName, "Required parameter loginName must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public Login setAlt(java.lang.String alt) {
      return (Login) super.setAlt(alt);
    }

    @Override
    public Login setFields(java.lang.String fields) {
      return (Login) super.setFields(fields);
    }

    @Override
    public Login setKey(java.lang.String key) {
      return (Login) super.setKey(key);
    }

    @Override
    public Login setOauthToken(java.lang.String oauthToken) {
      return (Login) super.setOauthToken(oauthToken);
    }

    @Override
    public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Login) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Login setQuotaUser(java.lang.String quotaUser) {
      return (Login) super.setQuotaUser(quotaUser);
    }

    @Override
    public Login setUserIp(java.lang.String userIp) {
      return (Login) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String loginName;

    /**

     */
    public java.lang.String getLoginName() {
      return loginName;
    }

    public Login setLoginName(java.lang.String loginName) {
      this.loginName = loginName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public Login setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public Login set(String parameterName, Object value) {
      return (Login) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "readConversationsDB".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link ReadConversationsDB#execute()} method to invoke the remote operation.
   *
   * @param loginName
   * @return the request
   */
  public ReadConversationsDB readConversationsDB(java.lang.String loginName) throws java.io.IOException {
    ReadConversationsDB result = new ReadConversationsDB(loginName);
    initialize(result);
    return result;
  }

  public class ReadConversationsDB extends MyApiRequest<com.example.cibi.myapplication.backend.myApi.model.ConversationSSCollection> {

    private static final String REST_PATH = "readConversationsDB/{loginName}";

    /**
     * Create a request for the method "readConversationsDB".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link ReadConversationsDB#execute()} method to invoke the remote
     * operation. <p> {@link ReadConversationsDB#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param loginName
     * @since 1.13
     */
    protected ReadConversationsDB(java.lang.String loginName) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.cibi.myapplication.backend.myApi.model.ConversationSSCollection.class);
      this.loginName = com.google.api.client.util.Preconditions.checkNotNull(loginName, "Required parameter loginName must be specified.");
    }

    @Override
    public ReadConversationsDB setAlt(java.lang.String alt) {
      return (ReadConversationsDB) super.setAlt(alt);
    }

    @Override
    public ReadConversationsDB setFields(java.lang.String fields) {
      return (ReadConversationsDB) super.setFields(fields);
    }

    @Override
    public ReadConversationsDB setKey(java.lang.String key) {
      return (ReadConversationsDB) super.setKey(key);
    }

    @Override
    public ReadConversationsDB setOauthToken(java.lang.String oauthToken) {
      return (ReadConversationsDB) super.setOauthToken(oauthToken);
    }

    @Override
    public ReadConversationsDB setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ReadConversationsDB) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ReadConversationsDB setQuotaUser(java.lang.String quotaUser) {
      return (ReadConversationsDB) super.setQuotaUser(quotaUser);
    }

    @Override
    public ReadConversationsDB setUserIp(java.lang.String userIp) {
      return (ReadConversationsDB) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String loginName;

    /**

     */
    public java.lang.String getLoginName() {
      return loginName;
    }

    public ReadConversationsDB setLoginName(java.lang.String loginName) {
      this.loginName = loginName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ReadConversationsDB setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ReadConversationsDB setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public ReadConversationsDB set(String parameterName, Object value) {
      return (ReadConversationsDB) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sendMessage".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SendMessage#execute()} method to invoke the remote operation.
   *
   * @param cookieVal
   * @param loginName
   * @param recEmail
   * @param msgText
   * @return the request
   */
  public SendMessage sendMessage(java.lang.String cookieVal, java.lang.String loginName, java.lang.String recEmail, java.lang.String msgText) throws java.io.IOException {
    SendMessage result = new SendMessage(cookieVal, loginName, recEmail, msgText);
    initialize(result);
    return result;
  }

  public class SendMessage extends MyApiRequest<Void> {

    private static final String REST_PATH = "sendMessage/{cookieVal}/{loginName}/{recEmail}/{msgText}";

    /**
     * Create a request for the method "sendMessage".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SendMessage#execute()} method to invoke the remote operation. <p>
     * {@link
     * SendMessage#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param cookieVal
     * @param loginName
     * @param recEmail
     * @param msgText
     * @since 1.13
     */
    protected SendMessage(java.lang.String cookieVal, java.lang.String loginName, java.lang.String recEmail, java.lang.String msgText) {
      super(MyApi.this, "POST", REST_PATH, null, Void.class);
      this.cookieVal = com.google.api.client.util.Preconditions.checkNotNull(cookieVal, "Required parameter cookieVal must be specified.");
      this.loginName = com.google.api.client.util.Preconditions.checkNotNull(loginName, "Required parameter loginName must be specified.");
      this.recEmail = com.google.api.client.util.Preconditions.checkNotNull(recEmail, "Required parameter recEmail must be specified.");
      this.msgText = com.google.api.client.util.Preconditions.checkNotNull(msgText, "Required parameter msgText must be specified.");
    }

    @Override
    public SendMessage setAlt(java.lang.String alt) {
      return (SendMessage) super.setAlt(alt);
    }

    @Override
    public SendMessage setFields(java.lang.String fields) {
      return (SendMessage) super.setFields(fields);
    }

    @Override
    public SendMessage setKey(java.lang.String key) {
      return (SendMessage) super.setKey(key);
    }

    @Override
    public SendMessage setOauthToken(java.lang.String oauthToken) {
      return (SendMessage) super.setOauthToken(oauthToken);
    }

    @Override
    public SendMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SendMessage) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SendMessage setQuotaUser(java.lang.String quotaUser) {
      return (SendMessage) super.setQuotaUser(quotaUser);
    }

    @Override
    public SendMessage setUserIp(java.lang.String userIp) {
      return (SendMessage) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cookieVal;

    /**

     */
    public java.lang.String getCookieVal() {
      return cookieVal;
    }

    public SendMessage setCookieVal(java.lang.String cookieVal) {
      this.cookieVal = cookieVal;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String loginName;

    /**

     */
    public java.lang.String getLoginName() {
      return loginName;
    }

    public SendMessage setLoginName(java.lang.String loginName) {
      this.loginName = loginName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String recEmail;

    /**

     */
    public java.lang.String getRecEmail() {
      return recEmail;
    }

    public SendMessage setRecEmail(java.lang.String recEmail) {
      this.recEmail = recEmail;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String msgText;

    /**

     */
    public java.lang.String getMsgText() {
      return msgText;
    }

    public SendMessage setMsgText(java.lang.String msgText) {
      this.msgText = msgText;
      return this;
    }

    @Override
    public SendMessage set(String parameterName, Object value) {
      return (SendMessage) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateDB".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link UpdateDB#execute()} method to invoke the remote operation.
   *
   * @param loginName
   * @param cookieVal
   * @return the request
   */
  public UpdateDB updateDB(java.lang.String loginName, java.lang.String cookieVal) throws java.io.IOException {
    UpdateDB result = new UpdateDB(loginName, cookieVal);
    initialize(result);
    return result;
  }

  public class UpdateDB extends MyApiRequest<com.example.cibi.myapplication.backend.myApi.model.ResponseCode> {

    private static final String REST_PATH = "responsecode/{loginName}/{cookieVal}";

    /**
     * Create a request for the method "updateDB".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link UpdateDB#execute()} method to invoke the remote operation. <p>
     * {@link
     * UpdateDB#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param loginName
     * @param cookieVal
     * @since 1.13
     */
    protected UpdateDB(java.lang.String loginName, java.lang.String cookieVal) {
      super(MyApi.this, "PUT", REST_PATH, null, com.example.cibi.myapplication.backend.myApi.model.ResponseCode.class);
      this.loginName = com.google.api.client.util.Preconditions.checkNotNull(loginName, "Required parameter loginName must be specified.");
      this.cookieVal = com.google.api.client.util.Preconditions.checkNotNull(cookieVal, "Required parameter cookieVal must be specified.");
    }

    @Override
    public UpdateDB setAlt(java.lang.String alt) {
      return (UpdateDB) super.setAlt(alt);
    }

    @Override
    public UpdateDB setFields(java.lang.String fields) {
      return (UpdateDB) super.setFields(fields);
    }

    @Override
    public UpdateDB setKey(java.lang.String key) {
      return (UpdateDB) super.setKey(key);
    }

    @Override
    public UpdateDB setOauthToken(java.lang.String oauthToken) {
      return (UpdateDB) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateDB setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateDB) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateDB setQuotaUser(java.lang.String quotaUser) {
      return (UpdateDB) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateDB setUserIp(java.lang.String userIp) {
      return (UpdateDB) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String loginName;

    /**

     */
    public java.lang.String getLoginName() {
      return loginName;
    }

    public UpdateDB setLoginName(java.lang.String loginName) {
      this.loginName = loginName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cookieVal;

    /**

     */
    public java.lang.String getCookieVal() {
      return cookieVal;
    }

    public UpdateDB setCookieVal(java.lang.String cookieVal) {
      this.cookieVal = cookieVal;
      return this;
    }

    @Override
    public UpdateDB set(String parameterName, Object value) {
      return (UpdateDB) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
